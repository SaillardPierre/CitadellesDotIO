name: Run SonarCloud Analysis

env:
  SONAR_SECRET :
    description : SonarCloud secret token
    required : true
  GITHUB_SECRET :
    description : GitHub secret token
    required : true
  RUNNER_OS : 
    description : Runner OS
    required : true

runs:
  using: composite
  steps:
  - name: Set up JDK 11
    uses: actions/setup-java@v1
    with:
      java-version: 1.11
  - uses: actions/checkout@v2
    with:
      fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  - name: Cache SonarCloud packages
    uses: actions/cache@v1
    with:
      path: ~\sonar\cache
      key: ${{ env.RUNNER_OS }}-sonar
      restore-keys: ${{ env.RUNNER_OS }}-sonar
  - name: Cache SonarCloud scanner
    id: cache-sonar-scanner
    uses: actions/cache@v1
    with:
      path: .\.sonar\scanner
      key: ${{ env.RUNNER_OS }}-sonar-scanner
      restore-keys: ${{ env.RUNNER_OS }}-sonar-scanner
  - name: Install SonarCloud scanner
    if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
    shell: powershell
    run: |
      New-Item -Path .\.sonar\scanner -ItemType Directory
      dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
  - name: Install dotnet-coverage
    shell: powershell
    run: |
      dotnet tool install --global dotnet-coverage
  - name: Build and analyze
    env:
      GITHUB_TOKEN: ${{ env.GITHUB_SECRET }}  # Needed to get PR information, if any
      SONAR_TOKEN: ${{ env.SONAR_SECRET }}
    shell: powershell
    run: |
      .\.sonar\scanner\dotnet-sonarscanner begin /k:"SaillardPierre_CitadellesDotIO" /o:"saillardpierre" /d:sonar.login="${{ env.SONAR_SECRET }}" /d:sonar.host.url="https://sonarcloud.io"  /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
      dotnet build CitadellesDotIO.sln
      dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
      .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ env.SONAR_SECRET }}"
            