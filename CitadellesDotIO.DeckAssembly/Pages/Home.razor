@page "/"
@using CitadellesDotIO.DeckAssembly.Components
@using CitadellesDotIO.DeckAssembly.Model
@using CitadellesDotIO.Engine.Factories

@* <CitadellesDotIO.DeckAssembly.Components.OSPickPoolComponent PickHandLowerThreshold=0
                                                           PickHandUpperThreshold=pickHandUpperThreshold
                                                           PickPoolValue=PickPoolValue /> *@
@* <CitadellesDotIO.DeckAssembly.Components.OSIdleHandComponent IdleHandValue=IdleHandValue />*@

<CardsContainer InitialCardsDeals="BuildInitalDeal()" />

@code {
    private int pickHandLowerThreshold = 0;
    private int pickHandUpperThreshold = default;
    private int pickPoolSize = 5;

    private List<Card> PickPoolValue = BuildItems();
    private List<Card> IdleHandValue = BuildItems();

    private static Dictionary<string, List<Card>> BuildInitalDeal()
    {
        Dictionary<string, List<Card>> result = new();

        result.Add("pickPool", BuildItems());
        result.Add("pickhand", new(){ new Card(1)});
        result.Add("thirdPool", new());

        return result;
    }

    private static List<Card> BuildItems()
    => CharactersDtoFactory.VanillaCharactersList().Select((c, i) => new CharacterCard(i, c) as Card).ToList();

   

}
