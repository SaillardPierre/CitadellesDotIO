@using CitadellesDotIO.DeckAssembly.EventArgs.DraggableEventArgs
@using CitadellesDotIO.DeckAssembly.Model
@inherits DraggableContainerComponent
<CascadingValue Value="(Func<DraggableHoverStartEventArgs, Task>) OnDraggableHoverStart">
    <CascadingValue Value="(Func<DraggableHoverEndEventArgs, Task>) OnDraggableHoverEnd">
        <RadzenStack style="width: 100%; height: 30vh;" JustifyContent="JustifyContent.Stretch" Gap="0px">
            <CardItemList @ref=IdleHand Id=@nameof(IdleHand) Cards=IdleHandValue CssClasses="new(){DropzonesClassName}" CardClasses="new(){DraggablesClassName}" />
            <RadzenRow>
                <p>
                    FutureDropIndex :
                    <RadzenText Text=@FutureDropIndex.ToString() TextStyle="TextStyle.DisplayH4" />
                </p>
                <p>
                    CurrentSource :
                    <RadzenText Text=@DraggedCardSource?.Id.ToString() TextStyle="TextStyle.DisplayH4" />
                </p>
                <p>
                    CurrentHoverTarget :
                    <RadzenText Text=@DropzoneHoverSource?.Id.ToString() TextStyle="TextStyle.DisplayH4" />
                </p>
            </RadzenRow>
        </RadzenStack>
    </CascadingValue>
</CascadingValue>

@code {

    public IdleHandComponent() : base("idleHandDraggable", "idleHandDropzone")
    {
    }

    [Parameter]
    public List<Card> IdleHandValue { get; set; }
    private CardItemList IdleHand { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }
        BlazorComponent = DotNetObjectReference.Create(this as DraggableContainerComponent);
        InitJS();
    }

    public override async Task OnDraggableHoverStart(DraggableHoverStartEventArgs args)
    {
        this.HoveredCardSource = IdleHand;
        await base.OnDraggableHoverStart(args);
    }

    [JSInvokable(nameof(OnDraggableDragStart))]
    public override async Task OnDraggableDragStart(DraggableDragStartEventArgs args)
    {
        this.DraggedCardSource = IdleHand;
        await base.OnDraggableDragStart(args);
    }

    [JSInvokable(nameof(OnDraggableDropzoneEnter))]
    public override async Task OnDraggableDropzoneEnter(DraggableDropzoneEnterEventArgs args)
    {
        this.DropzoneHoverSource = IdleHand;
        await base.OnDraggableDropzoneEnter(args);
    }
}

